{"version":3,"sources":["components/jumbotron/Jumbotron.js","components/navbar/Navbar.js","components/products/ProductCard.js","components/products/ProductList.js","components/App.js","components/login/LoginPage.js","index.js"],"names":["Jumbotron","className","src","style","width","paddingTop","alt","Navbar","props","logOutRef","React","createRef","usernameRef","to","ref","onClick","current","display","window","localStorage","removeItem","location","hash","isLoggedIn","swapModal","username","productAmount","ProductCard","onInputChange","e","setState","amount","target","value","onFormSubmit","event","preventDefault","Selectedproduct","title","price","parseInt","state","createdAt","Date","getTime","addItem","this","image","onSubmit","type","min","max","onChange","required","Component","ProductList","products","id","img","tags","isAvailable","productlist","map","product","key","flexWrap","justifyContent","App","getPost","a","axios","methods","url","refreshJWT_backend","formdata","FormData","append","getItem","method","data","headers","then","response","setItem","access","catch","err","loadEntrys_backend","selectedProducts","cart","entrys","entry","name","cost","quantity","total","count","alert","newArray","cartWithoutProduct","i","length","updateEntry","checkOut","addEntry_backend","form","push","console","log","entry_id","deleteProduct","deleteEntry_backend","deleteProductAmount","splice","product_id","arr","total_new","reduce","accumulator","p","closeModal","show","idx","colSpan","LoginPage","loginController","loginFormRef","classList","replace","loginTbRef","add","registerFormRef","registerTbRef","remove","RegisterController","onLoginFormSubmit","password","refresh","errRef","innerText","onRegisterFormSubmit","usernameR","passwordR","email","htmlFor","maxLength","placeholder","minLength","ReactDOM","render","basename","exact","path","component","document","querySelector"],"mappings":"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","file":"static/js/main.dce19cfd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Jumbotron.css'\r\n\r\n\r\n\r\nconst Jumbotron = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"jumbo\">\r\n                <img src=\"https://1aike31wshtt3k0e9u2nxtwz-wpengine.netdna-ssl.com/wp-content/uploads/2017/05/sophie-leng-still-life.jpg\" style={{ width: '100%', paddingTop: '47px' }} alt=\"Jumbotron\" />\r\n                <h1>PRODUCTS</h1>\r\n\r\n            </div >\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Jumbotron;","import React from 'react'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const logOutRef = React.createRef()\r\n    const usernameRef = React.createRef()\r\n    const logOut = () => {\r\n        usernameRef.current.style.display = 'none'\r\n        window.localStorage.removeItem('jwt_token')\r\n        window.localStorage.removeItem('refresh_token')\r\n        window.location.hash = '/login'\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\" >\r\n            <ul className=\"nav\">\r\n                <li>\r\n                    <Link to=\"/\" className=\"active navLink\">Products</Link>\r\n                </li>\r\n                <li ref={logOutRef} onClick={logOut}>\r\n                    <Link to=\"/login\" className=\"navLink\">\r\n                        {props.isLoggedIn ? 'LogOut' : 'LogIn'}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"cartIcon\" onClick={props.swapModal}>\r\n                    <span className='username' ref={usernameRef}>{props.username}</span>\r\n                    <span className=\"badge\">\r\n                        {props.productAmount}\r\n                    </span>\r\n                    <i className=\"fas fa-shopping-cart\"></i>\r\n                </li>\r\n\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport './ProductCard.css'\r\n\r\nclass ProductCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { amount: '' }\r\n    }\r\n\r\n    // to setState when the value of input change\r\n    onInputChange = (e) => {\r\n        this.setState({ amount: e.target.value })\r\n    }\r\n\r\n    //When the form submit,the selected product will be send to the callback function addItem(). \r\n    onFormSubmit = event => {\r\n        event.preventDefault()\r\n        // console.log(this)\r\n        const Selectedproduct = {\r\n            // id: this.props.id,\r\n            title: this.props.title,\r\n            price: this.props.price,\r\n            amount: parseInt(this.state.amount),\r\n            createdAt: new Date().getTime()\r\n        }\r\n        this.props.addItem(Selectedproduct)\r\n\r\n        //after formSubmit, value(amount) show nothing on the productCard\r\n        this.setState({ amount: '' })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"card\">\r\n                <div className=\"imgContainer\">\r\n                    < img src={this.props.image} style={{ width: '100%' }} alt={this.props.title} />\r\n                </div>\r\n                <div className=\"productContent\">\r\n                    <h2>{this.props.title}</h2>\r\n                    <h3> NT${this.props.price}</h3>\r\n                </div>\r\n                <form className=\"productForm\" onSubmit={this.onFormSubmit}>\r\n                    <input\r\n                        className=\"productInput\"\r\n                        type=\"number\" min=\"1\" max=\"10\"\r\n                        value={this.state.amount}\r\n                        onChange={this.onInputChange}\r\n                        required />\r\n                    <button\r\n                        className=\"addBtn\"\r\n                        style={{ display: 'block' }}\r\n                        onClick={this.onSubmit}\r\n                    >\r\n                        BUY\r\n                        {/* <i className=\"fas fa-shopping-cart\"></i> */}\r\n                    </button>\r\n                </form>\r\n\r\n            </div >\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport PorductCard from './ProductCard'\r\n\r\nclass ProductList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.products = [\r\n            {\r\n                id: '1',\r\n                title: 'Apple',\r\n                price: 10,\r\n                img: 'https://i.pinimg.com/564x/60/4a/82/604a82768a91dab6d684b34009f955d7.jpg',\r\n                tags: ['水果'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '2',\r\n                title: 'Plate',\r\n                price: 60,\r\n                img: 'https://i.pinimg.com/564x/38/d9/40/38d940442ab1d63b8ec2fb4f02252ef6.jpg',\r\n                tags: ['生活用品'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '3',\r\n                title: 'Pen',\r\n                price: 180,\r\n                img: 'https://i.pinimg.com/474x/ea/d0/48/ead0488575060ad4bc476749ff2ab372.jpg',\r\n                tags: ['文具'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '4',\r\n                title: 'Umbrella',\r\n                price: 220,\r\n                img: 'https://i.pinimg.com/564x/60/87/c9/6087c9413bf3b09b8d288db970ca3b14.jpg',\r\n                tags: ['生活用品'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '5',\r\n                title: 'Pillow',\r\n                price: 360,\r\n                img: 'https://i.pinimg.com/564x/73/53/c3/7353c3e8f8fea87e016b5ebcd3b88b54.jpg',\r\n                tags: ['生活用品'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '6',\r\n                title: 'Mirror',\r\n                price: 360,\r\n                img: 'https://i.pinimg.com/564x/90/85/fc/9085fc877a692f873f98025ed4c2599f.jpg',\r\n                tags: ['生活用品'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '7',\r\n                title: 'T-shirt',\r\n                price: 400,\r\n                img: 'https://i.pinimg.com/564x/bc/9c/1e/bc9c1e0b42b1dde05b65c20ab2ae30da.jpg',\r\n                tags: ['衣服'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '8',\r\n                title: 'Bag',\r\n                price: 450,\r\n                img: 'https://i.pinimg.com/564x/d0/9e/f0/d09ef03e2f7f782b09dfcc0f044b1228.jpg',\r\n                tags: ['生活用品'],\r\n                isAvailable: true\r\n            },\r\n            {\r\n                id: '9',\r\n                title: 'Body Lotion',\r\n                price: 520,\r\n                img: 'https://i.pinimg.com/564x/80/e6/73/80e67398cf1293395de3038a789a4a1e.jpg',\r\n                tags: ['藥妝'],\r\n                isAvailable: true\r\n            }\r\n        ];\r\n\r\n        //Map all products in productList to turn into PorductCards,and send data inside products to ProductCard\r\n        this.productlist = this.products.map((product) => {\r\n            // console.log(product)\r\n            return <PorductCard key={product.id} title={product.title} price={product.price} image={product.img} addItem={this.props.addItem} />\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div\r\n                className=\"product-list\"\r\n                style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}\r\n            >\r\n                {this.productlist}\r\n\r\n            </ div >\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ProductList","import React from 'react';\r\nimport Jumbotron from './jumbotron/Jumbotron';\r\nimport Navbar from './navbar/Navbar'\r\nimport ProductList from './products/ProductList'\r\nimport './App.css'\r\nimport axios from 'axios'\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.refreshJWT_backend()\r\n        this.state = {\r\n            data: [1, 2, 3, 4, 5, 6],\r\n            selectedProducts: [],\r\n            total: 0,\r\n            count: 0,\r\n            show: 'none',\r\n            username: '',\r\n            isLoggedIn: true\r\n        }\r\n        //check if log in or not\r\n        this.loadEntrys_backend()\r\n    }\r\n\r\n\r\n    getPost = async () => {\r\n        await axios({\r\n            methods: \"get\",\r\n            url: \"https://jsonplaceholder.typicode.com/users\"\r\n        });\r\n    }\r\n\r\n    //refresh token\r\n    refreshJWT_backend = () => {\r\n        var formdata = new FormData();\r\n        formdata.append(\"refresh\", window.localStorage.getItem('refresh_token'));\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/auth/jwt/refresh/',\r\n            data: formdata,\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }).then((response) => {\r\n            window.localStorage.setItem('jwt_token', response.data.access)\r\n\r\n        }).catch(err => {\r\n            this.setState({ isLoggedIn: false })\r\n        })\r\n    }\r\n\r\n    //load user's cart data from backend\r\n    loadEntrys_backend = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/auth/users/me/',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem('jwt_token')\r\n            }\r\n        })\r\n            .then((response) => {\r\n                //handle success\r\n                this.setState({\r\n                    selectedProducts: response.data.cart.entrys.map((entry) => {\r\n                        return {\r\n                            title: entry.product.name,\r\n                            price: entry.product.cost,\r\n                            amount: entry.quantity,\r\n                            id: entry.id\r\n                        }\r\n                    }),\r\n                    username: response.data.username,\r\n                    total: response.data.cart.total,\r\n                    count: response.data.cart.count\r\n\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                //handle error\r\n                // console.log(response);\r\n                alert('請登入')\r\n                window.location.hash = \"/login\"\r\n                this.setState({ isLoggedIn: false })\r\n            });\r\n    }\r\n\r\n\r\n    // add item at frontend\r\n    addItem = (product) => {\r\n        if (product.amount > 0) {\r\n            var newArray = this.state.selectedProducts;\r\n            var cartWithoutProduct = true\r\n            for (let i = 0; i < newArray.length; i++) {\r\n                if (newArray[i].title === product.title) {\r\n                    newArray[i].amount += product.amount\r\n                    cartWithoutProduct = false\r\n                    this.updateEntry(newArray[i])\r\n                    this.setState({\r\n                        selectedProducts: newArray,\r\n                        count: this.state.count + product.amount\r\n                    })\r\n                    this.checkOut(newArray);\r\n                    break\r\n                }\r\n            }\r\n            if (cartWithoutProduct) {\r\n                this.addEntry_backend(product, newArray)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // add item to backend\r\n    addEntry_backend = (product, newArray) => {\r\n        var form = new FormData();\r\n        form.append(\"productname\", product.title);\r\n        form.append(\"productcost\", product.price);\r\n        form.append(\"quantity\", product.amount);\r\n        axios({\r\n            method: 'post',\r\n            data: form,\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/api/entrys/',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem('jwt_token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                //handle success\r\n                //console.log(response);\r\n                product.id = response.data.id\r\n                newArray.push(product)\r\n                this.setState({\r\n                    selectedProducts: newArray,\r\n                    count: this.state.count + product.amount\r\n                })\r\n                this.checkOut(newArray);\r\n                // console.log(newArray)\r\n            })\r\n            .catch(err => {\r\n                //handle error\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    updateEntry = async (product) => {\r\n        var form = new FormData();\r\n        var entry_id = product.id\r\n        form.append('quantity', product.amount)\r\n        // console.log(entry_id)\r\n        await axios({\r\n            method: 'put',\r\n            data: form,\r\n            url: `https://djangorest-277405.uc.r.appspot.com/api/entrys/${entry_id}/`,\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem('jwt_token')\r\n            }\r\n        })\r\n    }\r\n\r\n    //delete product at frontend\r\n    deleteProduct = (i) => {\r\n        return () => {\r\n            const newArray = this.state.selectedProducts;\r\n            this.deleteEntry_backend(newArray[i].id)\r\n            const deleteProductAmount = newArray[i].amount\r\n            newArray.splice(i, 1);\r\n            this.setState({\r\n                selectedProducts: newArray,\r\n                count: this.state.count - deleteProductAmount\r\n            });\r\n            // console.log(this.state.selectedProducts);\r\n            this.checkOut(newArray)\r\n        }\r\n\r\n    }\r\n\r\n    //delete product at backend\r\n    deleteEntry_backend = async product_id => {\r\n        await axios({\r\n            method: 'delete',\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/api/entrys/' + product_id + '/',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem('jwt_token')\r\n            }\r\n        })\r\n    }\r\n\r\n    checkOut = (arr) => {\r\n        var total_new = arr.reduce(\r\n            (accumulator, p) => {\r\n                return p.price * p.amount + accumulator\r\n            },\r\n            0\r\n        )\r\n        this.setState({ total: total_new })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ show: 'none' })\r\n    }\r\n\r\n    swapModal = () => {\r\n        this.setState({ show: this.state.show === 'block' ? 'none' : 'block' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar productAmount={this.state.count} swapModal={this.swapModal} username={this.state.username} isLoggedIn={this.state.isLoggedIn} />\r\n                <Jumbotron />\r\n                <ProductList addItem={this.addItem} />\r\n                <div className=\"modal\" style={{ display: this.state.show }}>\r\n                    <span className=\"closebtn\" onClick={this.closeModal}>&times;</span>\r\n\r\n                    <table className=\"shoppingCart\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td onClick={this.getPost}>商品</td>\r\n                                <td>數量</td>\r\n                                <td>價錢</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"i\">\r\n                            {this.state.selectedProducts.map((p, idx) => (\r\n                                <tr key={idx} >\r\n                                    <td>\r\n                                        <span className=\"deleteBtn\" onClick={this.deleteProduct(idx)}>\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                        </span>\r\n                                        {p.title}\r\n                                    </td>\r\n                                    <td>{p.amount}</td>\r\n                                    <td>{p.price}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td colSpan=\"2\" >\r\n                                    總計\r\n                                </td>\r\n                                <td>\r\n                                    NTD {this.state.total}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                    <button className=\"close\" onClick={this.closeModal}>Close</button>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Navbar from '../navbar/Navbar'\r\nimport './Loginpage.css'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.key = 'productInMyCart';\r\n        this.errRef = React.createRef();\r\n        this.loginTbRef = React.createRef();\r\n        this.registerTbRef = React.createRef();\r\n        this.registerFormRef = React.createRef();\r\n        this.loginFormRef = React.createRef();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            usernameR: '',\r\n            passwordR: '',\r\n            email: '',\r\n\r\n        }\r\n\r\n    };\r\n    //control Login Form show and Login tab be active\r\n    loginController = () => {\r\n        this.loginFormRef.current.classList.replace('closeForm', 'showForm')\r\n        this.loginTbRef.current.classList.add('tbActive')\r\n        this.registerFormRef.current.classList.replace('showForm', 'closeForm')\r\n        this.registerTbRef.current.classList.remove('tbActive')\r\n\r\n    };\r\n\r\n    //control Register Form show and Register tab be active\r\n    RegisterController = () => {\r\n        this.registerFormRef.current.classList.replace('closeForm', 'showForm')\r\n        this.registerTbRef.current.classList.add('tbActive')\r\n        this.loginFormRef.current.classList.replace('showForm', 'closeForm')\r\n        this.loginTbRef.current.classList.remove('tbActive')\r\n    };\r\n\r\n    //Login form submit\r\n    onLoginFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        // this.onSubmit(this.state.username, this.state.password)\r\n        var username = this.state.username;\r\n        var password = this.state.password;\r\n        var formdata = new FormData();\r\n        formdata.append(\"username\", username);\r\n        formdata.append(\"password\", password);\r\n\r\n        // console.log(username, password)\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/auth/jwt/create/',\r\n            data: formdata,\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }).then((response) => {\r\n            // console.log(result.data.access)\r\n            alert(`Hello ${username}`)\r\n            window.localStorage.setItem('jwt_token', response.data.access)\r\n            window.localStorage.setItem('refresh_token', response.data.refresh)\r\n            window.location.hash = \"/\"\r\n        }).catch(err => {\r\n            alert(err)\r\n            this.errRef.current.innerText = '帳號或密碼錯誤，還是尚未註冊呢?'\r\n        })\r\n    }\r\n\r\n    //registerForm submit\r\n    onRegisterFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        var username = this.state.usernameR;\r\n        var password = this.state.passwordR;\r\n        var email = this.state.email;\r\n        var formdata = new FormData();\r\n        formdata.append('username', username);\r\n        formdata.append('email', email);\r\n        formdata.append('password', password);\r\n        axios({\r\n            method: 'post',\r\n            url: 'https://djangorest-277405.uc.r.appspot.com/auth/users/',\r\n            data: formdata,\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n\r\n        }).then(response => {\r\n            alert('註冊成功')\r\n            window.location.hash = '/login'\r\n\r\n        }).catch(err => {\r\n            if (err.response.data.username[0] === 'A user with that username already exists.') {\r\n                alert(err.response.data.username[0])\r\n            } else {\r\n                alert(err.response)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginPage\">\r\n                <Navbar productAmount={0} username={this.state.username} />\r\n                <div className=\"formContainer\">\r\n                    <div className=\"tab\">\r\n                        <button className=\"tabLink tbActive\" onClick={this.loginController} ref={this.loginTbRef}>會員登入</button>\r\n                        <button className=\"tabLink\" ref={this.registerTbRef}\r\n                            onClick={this.RegisterController}\r\n                        >會員註冊</button>\r\n                    </div>\r\n                    <div className=\"form showForm\" key={1} ref={this.loginFormRef}\r\n                    >\r\n                        <form className=\"loginForm\" onSubmit={this.onLoginFormSubmit}>\r\n                            <h1 className=\"loginTitle\">會員登入</h1>\r\n                            <div className=\"errText\" ref={this.errRef}></div>\r\n                            <label htmlFor=\"username\">會員名稱</label>\r\n                            <input\r\n                                className=\"loginInput\"\r\n                                type=\"username\"\r\n                                id=\"username\"\r\n                                maxLength=\"10\"\r\n                                placeholder=\"輸入名稱\"\r\n                                onChange={e => { this.setState({ username: e.target.value }) }}\r\n                                value={this.state.username}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"password\">密碼</label>\r\n                            <input\r\n                                className=\"loginInput\"\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                minLength=\"6\"\r\n                                placeholder=\"輸入密碼\"\r\n                                onChange={e => { this.setState({ password: e.target.value }) }}\r\n                                value={this.state.password}\r\n                                required />\r\n                            <p>\r\n                                試用帳號密碼\r\n                                <br />\r\n                                會員名稱 : guest1\r\n                                <br />\r\n                                密碼 : password2guest1\r\n                            </p>\r\n                            <button className=\"submitBtn\">確認</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"form closeForm\" ref={this.registerFormRef} key={2}>\r\n                        <form className=\"registerForm\" onSubmit={this.onRegisterFormSubmit}>\r\n                            <h1 className=\"registerTitle\">會員註冊</h1>\r\n                            <label htmlFor=\"username\">會員名稱</label>\r\n                            <input\r\n                                className=\"registerInput\"\r\n                                type=\"username\"\r\n                                id=\"usernameR\"\r\n                                maxLength=\"10\"\r\n                                placeholder=\"輸入名稱\"\r\n                                value={this.state.usernameR}\r\n                                onChange={e => { this.setState({ usernameR: e.target.value }) }}\r\n                                required />\r\n\r\n                            <label htmlFor=\"emailForRegister\">Email</label>\r\n                            <input\r\n                                className=\"registerInput\"\r\n                                type=\"email\"\r\n                                id=\"emailForRegister\"\r\n                                placeholder=\"輸入Email\"\r\n                                value={this.state.email}\r\n                                onChange={e => { this.setState({ email: e.target.value }) }}\r\n                                required\r\n                            />\r\n                            <label htmlFor=\"passwordForRegister\">密碼</label>\r\n                            <input\r\n                                className=\"registerInput\"\r\n                                type=\"password\"\r\n                                id=\"passwordForRegister\"\r\n                                placeholder=\"輸入密碼\"\r\n                                minLength=\"0\"\r\n                                value={this.state.passwordR}\r\n                                onChange={e => { this.setState({ passwordR: e.target.value }) }}\r\n                                required\r\n                            />\r\n\r\n                            <button className=\"submitBtn\">確認</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport LoginPage from './components/login/LoginPage';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter basename=\"/\">\r\n        <Switch>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/login\" component={LoginPage} />\r\n\r\n        </Switch>\r\n    </HashRouter >\r\n\r\n\r\n    , document.querySelector('#root'))"],"sourceRoot":""}